version: "2.1"

services: 
    logstash: 
        build:
            context: logstash
            dockerfile: Dockerfile
        container_name: logstash
        volumes: 
            - ${PWD}/logstash/pcap:/usr/share/logstash/pcap
        networks: 
            - tap
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
        container_name: elasticsearch
        ports:
            - 9200:9200
            - 9300:9300
        environment: 
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
        networks: 
            tap:
                ipv4_address: 10.0.100.51
    kibana:
        build:
            context: kibana
            dockerfile: Dockerfile
        container_name: kibana
        ports:
            - 5601:5601
        depends_on: 
            - elasticsearch
        networks: 
            tap:
                ipv4_address: 10.0.100.52
    zookeeper:
        build:
            context: kafka
            dockerfile: Dockerfile
        container_name: zookeeper
        command: [ "zookeeper-server-start.sh", "config/zookeeper.properties" ] 
        ports: 
            - 20181:2181
        networks: 
            tap:
                ipv4_address: 10.0.100.22
    kafkaserver:
        build:
            context: kafka
            dockerfile: Dockerfile
        container_name: kafkaserver
        depends_on: 
            - zookeeper
        command: [ "kafka-server-start.sh", "config/server.properties" ] 
        ports: 
            - 9092:9092
        networks:
            tap:
                ipv4_address: 10.0.100.23    
    kafkaui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafkaui
        environment:
            - KAFKA_CLUSTERS_0_NAME=my_cluster
            - KAFKA_CLUSTERS_0_ZOOKEEPER=10.0.100.22:2181
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=10.0.100.23:9092
        ports: 
            - 8080:8080
        networks: 
            - tap
        depends_on:
            - kafkaserver   
    spark:
        build: 
            context: spark
            dockerfile: Dockerfile
        container_name: spark
        depends_on: 
            - kafkaserver
        networks: 
            - tap



volumes:
    pcap: 

networks:
    tap:
        name: tap
        driver: bridge
